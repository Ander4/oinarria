/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    id 'org.openjfx.javafxplugin' version '0.0.8'

    id 'org.beryx.jlink' version '2.21.1'

}

//javafx {
//
//    modules = []
//    version = '11.0.2'
//}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    implementation 'de.jensd:fontawesomefx-fontawesome:4.7.0-11', {
        exclude group: 'org.openjfx'
    }

}


// Define the main class for the application
mainClassName = "$moduleName/ehu.isad.Main"


def newArgs = [ '--add-exports','java.desktop/com.apple.eawt=ALL-UNNAMED',]

run {
    inputs.property('moduleName', moduleName)
    doFirst {
        jvmArgs = jvmArgs.plus(newArgs)
        jvmArgs = jvmArgs.plus(['--module-path', classpath.asPath,
                                '--patch-module', "$moduleName=" + files(sourceSets.main.output.resourcesDir).asPath,
                                '--module', "$mainClassName",
        ])
        classpath = files()
    }
}


run {
    standardInput = System.in
}

jlink {

    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'helloFXML'
    }

    jpackage {
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
    }
}
